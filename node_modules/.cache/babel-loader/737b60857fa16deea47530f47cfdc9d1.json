{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\\\u05DC\\u05DE\\u05D9\\u05D3\\u05D4 \\u05DE\\u05E8\\u05D7\\u05D5\\u05E7\\\\node.js\\\\chatApp\\\\chat-react\\\\src\\\\components\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCustomerName, setCustomerMail, setCustomerRoom } from '../Store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    customer: state.customerReducer.customer\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCustomerName: name => dispatch(setCustomerName(name)),\n  setCustomerMail: mail => dispatch(setCustomerMail(mail)),\n  setCustomerRoom: room => dispatch(setCustomerRoom(room)) // setConversations: (name) => dispatch(setCustomerName(name))\n\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(_s(function Login(props) {\n  _s();\n\n  const {\n    customer,\n    setCustomerName,\n    setCustomerMail,\n    setCustomerRoom,\n    history\n  } = props; // const [customerName, setCustomerName] = useState('');\n  // const [customerMail, setCustomerMail] = useState('');\n\n  const [customers, setCustomers] = useState([]);\n  const [existCustomer, setExistCustomer] = useState(false);\n  const [loginCustomer, setLoginCustomer] = useState(false);\n  const [loginBtn, setLoginBtn] = useState(false); // let loginBtn=false;\n\n  let loginCustomerTemp = false;\n  let existCustomerTemp = false;\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const customerDetails = {\n    \"customerName\": customer.customerName,\n    \"customerMail\": customer.customerMail,\n    \"customerRoom\": customer.customerRoom\n  };\n  useEffect(() => {\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      body: JSON.stringify(customerDetails)\n    };\n    fetch(\"http://localhost:3400/isLoginCustomer\", requestOptions).then(response => {\n      response.json();\n\n      if (response == true) {\n        loginCustomerTemp = true;\n        setLoginCustomer(true);\n      }\n\n      if (loginCustomerTemp) {\n        if (customer.customerName === 'Admin') {\n          history.push('/Admin');\n        } else history.push('/Customer');\n      }\n    }).catch(error => console.log('error', error));\n    var requestOptions3 = {\n      method: 'GET',\n      headers: myHeaders,\n      body: JSON.stringify(customerDetails)\n    };\n    fetch(\"http://localhost:3400/isExistCustomer\", requestOptions3).then(response => {\n      response.json();\n\n      if (response == true) {\n        existCustomerTemp = true;\n        setExistCustomer(true);\n      }\n\n      if (!existCustomerTemp && customer.customerMail !== '' && customer.customerName !== '' && customer.customerRoom !== '') {\n        debugger;\n        var requestOptions2 = {\n          method: 'POST',\n          headers: myHeaders,\n          body: JSON.stringify(customerDetails)\n        };\n        fetch(\"http://localhost:3400/createCustomer\", requestOptions2).then(response => response.json()).then(() => {\n          history.push('/Customer');\n        }).catch(error => console.log('error', error));\n      } else {\n        alert('these customer details are not allowd!');\n      }\n    }).catch(error => console.log('error', error));\n  }, [loginBtn]);\n\n  async function login() {\n    debugger;\n    loginBtn = true; //     const customerDetails = {\n    //         \"customerName\": customer.customerName,\n    //         \"customerMail\": customer.customerMail,\n    //         \"customerRoom\": customer.customerRoom\n    //     }\n    //     var requestOptions = {\n    //         method: 'GET',\n    //         headers: myHeaders,\n    //         body: JSON.stringify(customerDetails),\n    //     };\n    //     await fetch(\"http://localhost:3400/isLoginCustomer\", requestOptions)\n    //         .then(response => {\n    //             response.json()\n    //             if (response == true)\n    //                 setLoginCustomer(true)\n    //         })\n    //         .catch(error => console.log('error', error));\n    //     if (loginCustomer) {\n    //         if (customer.customerName === 'Admin') {\n    //             history.push('/Admin')\n    //         }\n    //         else\n    //             history.push('/Customer');\n    //     }\n    //     var requestOptions3 = {\n    //         method: 'GET',\n    //         headers: myHeaders,\n    //         body: JSON.stringify(customerDetails),\n    //     };\n    //    await fetch(\"http://localhost:3400/isExistCustomer\", requestOptions3)\n    //         .then(response => {\n    //             response.json()\n    //             if (response == true)\n    //                 setExistCustomer(true)\n    //         })\n    //         .catch(error => console.log('error', error));\n    //     if ((!existCustomer) && (customer.customerMail !== '') && (customer.customerName !== '') && (customer.customerRoom !== '')) {\n    //         debugger;\n    //         var requestOptions2 = {\n    //             method: 'POST',\n    //             headers: myHeaders,\n    //             body: JSON.stringify(customerDetails),\n    //         };\n    //       await  fetch(\"http://localhost:3400/createCustomer\", requestOptions2)\n    //             .then(response => response.json())\n    //             .then(() => {\n    //                 history.push('/Customer');\n    //             })\n    //             .catch(error => console.log('error', error));\n    //     }\n    //     else {\n    //         alert('these customer details are not allowd!')\n    //     }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"loader4\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader loader-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader loader-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader loader-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader loader-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"form-label\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"name\",\n              onChange: e => setCustomerName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputPassword1\",\n              className: \"form-label\",\n              children: \"Mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputPassword1\",\n              onChange: e => setCustomerMail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Room Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputPassword1\",\n              onChange: e => setCustomerRoom(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: login,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 9\n  }, this);\n}, \"JtNaKQ5cdrM9yjTud41Wd9+Mikg=\")));","map":{"version":3,"sources":["D:/תכנות/למידה מרחוק/node.js/chatApp/chat-react/src/components/login.js"],"names":["React","useState","useEffect","withRouter","connect","setCustomerName","setCustomerMail","setCustomerRoom","mapStateToProps","state","customer","customerReducer","mapDispatchToProps","dispatch","name","mail","room","Login","props","history","customers","setCustomers","existCustomer","setExistCustomer","loginCustomer","setLoginCustomer","loginBtn","setLoginBtn","loginCustomerTemp","existCustomerTemp","myHeaders","Headers","append","customerDetails","customerName","customerMail","customerRoom","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","push","catch","error","console","log","requestOptions3","requestOptions2","alert","login","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { setCustomerName, setCustomerMail, setCustomerRoom } from '../Store/actions'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        customer: state.customerReducer.customer\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCustomerName: (name) => dispatch(setCustomerName(name)),\r\n    setCustomerMail: (mail) => dispatch(setCustomerMail(mail)),\r\n    setCustomerRoom: (room) => dispatch(setCustomerRoom(room)),\r\n    // setConversations: (name) => dispatch(setCustomerName(name))\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(function Login(props) {\r\n\r\n    const { customer, setCustomerName, setCustomerMail, setCustomerRoom, history } = props\r\n    // const [customerName, setCustomerName] = useState('');\r\n    // const [customerMail, setCustomerMail] = useState('');\r\n    const [customers, setCustomers] = useState([]);\r\n    const [existCustomer, setExistCustomer] = useState(false);\r\n    const [loginCustomer, setLoginCustomer] = useState(false);\r\n    const [loginBtn, setLoginBtn] = useState(false);\r\n// let loginBtn=false;\r\nlet loginCustomerTemp=false;\r\nlet existCustomerTemp=false;\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const customerDetails = {\r\n        \"customerName\": customer.customerName,\r\n        \"customerMail\": customer.customerMail,\r\n        \"customerRoom\": customer.customerRoom\r\n    }\r\n\r\n    useEffect(() => {\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(customerDetails),\r\n        };\r\n\r\n         fetch(\"http://localhost:3400/isLoginCustomer\", requestOptions)\r\n            .then(response => {\r\n                response.json()\r\n                if (response == true)\r\n                {\r\n                    loginCustomerTemp=true;\r\n                    setLoginCustomer(true);\r\n                }\r\n\r\n                if (loginCustomerTemp) {\r\n                    if (customer.customerName === 'Admin') {\r\n                        history.push('/Admin')\r\n                    }\r\n                    else\r\n                        history.push('/Customer');\r\n            \r\n                }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n\r\n\r\n      \r\n\r\n        var requestOptions3 = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(customerDetails),\r\n        };\r\n\r\n        fetch(\"http://localhost:3400/isExistCustomer\", requestOptions3)\r\n            .then(response => {\r\n                response.json()\r\n                if (response == true)\r\n                {\r\n                    existCustomerTemp=true;\r\n                    setExistCustomer(true);\r\n                }\r\n\r\n                \r\n\r\n    if ((!existCustomerTemp) && (customer.customerMail !== '') && (customer.customerName !== '') && (customer.customerRoom !== '')) {\r\n        debugger;\r\n\r\n\r\n        var requestOptions2 = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(customerDetails),\r\n        };\r\n\r\n        fetch(\"http://localhost:3400/createCustomer\", requestOptions2)\r\n            .then(response => response.json())\r\n            .then(() => {\r\n                history.push('/Customer');\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n    }\r\n    else {\r\n        alert('these customer details are not allowd!')\r\n    }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n\r\n\r\n      \r\n    }, [loginBtn])\r\n\r\nasync function login() {\r\n    debugger;\r\n    loginBtn=true;\r\n   \r\n//     const customerDetails = {\r\n//         \"customerName\": customer.customerName,\r\n//         \"customerMail\": customer.customerMail,\r\n//         \"customerRoom\": customer.customerRoom\r\n//     }\r\n\r\n//     var requestOptions = {\r\n//         method: 'GET',\r\n//         headers: myHeaders,\r\n//         body: JSON.stringify(customerDetails),\r\n//     };\r\n\r\n//     await fetch(\"http://localhost:3400/isLoginCustomer\", requestOptions)\r\n//         .then(response => {\r\n//             response.json()\r\n//             if (response == true)\r\n//                 setLoginCustomer(true)\r\n//         })\r\n//         .catch(error => console.log('error', error));\r\n\r\n\r\n\r\n//     if (loginCustomer) {\r\n//         if (customer.customerName === 'Admin') {\r\n//             history.push('/Admin')\r\n//         }\r\n//         else\r\n//             history.push('/Customer');\r\n\r\n//     }\r\n\r\n//     var requestOptions3 = {\r\n//         method: 'GET',\r\n//         headers: myHeaders,\r\n//         body: JSON.stringify(customerDetails),\r\n//     };\r\n\r\n//    await fetch(\"http://localhost:3400/isExistCustomer\", requestOptions3)\r\n//         .then(response => {\r\n//             response.json()\r\n//             if (response == true)\r\n//                 setExistCustomer(true)\r\n//         })\r\n//         .catch(error => console.log('error', error));\r\n\r\n\r\n\r\n//     if ((!existCustomer) && (customer.customerMail !== '') && (customer.customerName !== '') && (customer.customerRoom !== '')) {\r\n//         debugger;\r\n\r\n\r\n//         var requestOptions2 = {\r\n//             method: 'POST',\r\n//             headers: myHeaders,\r\n//             body: JSON.stringify(customerDetails),\r\n//         };\r\n\r\n//       await  fetch(\"http://localhost:3400/createCustomer\", requestOptions2)\r\n//             .then(response => response.json())\r\n//             .then(() => {\r\n//                 history.push('/Customer');\r\n//             })\r\n//             .catch(error => console.log('error', error));\r\n\r\n//     }\r\n//     else {\r\n//         alert('these customer details are not allowd!')\r\n//     }\r\n}\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div id=\"loader4\">\r\n                            <span className=\"loader loader-1\"></span>\r\n                            <span className=\"loader loader-2\"></span>\r\n                            <span className=\"loader loader-3\"></span>\r\n                            <span className=\"loader loader-4\"></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br /><br />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <form>\r\n                        <h1>Login</h1>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"name\" onChange={(e) => setCustomerName(e.target.value)} />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Mail</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setCustomerMail(e.target.value)} />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Room Number</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setCustomerRoom(e.target.value)} />\r\n                        </div>\r\n\r\n                    </form>\r\n                    <button className=\"btn btn-primary\" onClick={login}>Login</button>\r\n\r\n                </div>\r\n\r\n            </div >\r\n\r\n        </div >\r\n\r\n\r\n    )\r\n}))\r\n"]},"metadata":{},"sourceType":"module"}