{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\\\u05DC\\u05DE\\u05D9\\u05D3\\u05D4 \\u05DE\\u05E8\\u05D7\\u05D5\\u05E7\\\\node.js\\\\chat-react\\\\src\\\\components\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCustomerName, setCustomerMail, setCustomerRoom } from '../Store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    customer: state.customerReducer.customer\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCustomerName: name => dispatch(setCustomerName(name)),\n  setCustomerMail: mail => dispatch(setCustomerMail(mail)),\n  setCustomerRoom: room => dispatch(setCustomerRoom(room)) // setConversations: (name) => dispatch(setCustomerName(name))\n\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(_s(function Login(props) {\n  _s();\n\n  const {\n    customer,\n    setCustomerName,\n    setCustomerMail,\n    setCustomerRoom,\n    history\n  } = props; // const [customerName, setCustomerName] = useState('');\n  // const [customerMail, setCustomerMail] = useState('');\n\n  const [customers, setCustomers] = useState([]);\n  const [existCustomer, setExistCustomer] = useState(false);\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  function login() {\n    debugger;\n    const customerDetails = {\n      \"customerName\": customer.customerName,\n      \"customerMail\": customer.customerMail,\n      \"customerRoom\": customer.customerRoom\n    };\n    var requestOptions1 = {\n      method: 'POST',\n      headers: myHeaders // body: JSON.stringify(customerDetails),\n\n    };\n    fetch(\"http://localhost:3400/getAllCustomers\", requestOptions1).then(response => response.json()).then(response => {\n      debugger;\n      setCustomers(response);\n    }).catch(error => console.log('error', error));\n\n    for (let i = 0; i < customers.length.length; i++) {\n      if (customers[i].customerMail == customer.customerMail) setExistCustomer(true);\n    } //map\n\n\n    customers;\n\n    if (!existCustomer) {\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: JSON.stringify(customerDetails)\n      };\n      fetch(\"http://localhost:3400/createCustomer\", requestOptions).then(response => response.json()).catch(error => console.log('error', error));\n\n      if (customer.customerName === 'Admin') {\n        history.push('/Admin');\n      } else {\n        history.push('/Customer');\n      }\n    } else {\n      // alert('this customer is already exist!')\n      history.push('/Customer');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"loader4\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader loader-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader loader-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader loader-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader loader-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"form-label\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"name\",\n              onChange: e => setCustomerName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputPassword1\",\n              className: \"form-label\",\n              children: \"Mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputPassword1\",\n              onChange: e => setCustomerMail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Room Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputPassword1\",\n              onChange: e => setCustomerRoom(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: login,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}, \"9oGchLGljabgXRHNYnRlW60C5KU=\"))); //     return(\n//         <div>\n// <h1 >Welcome To Login</h1>\n//         </div>\n//     );\n// }","map":{"version":3,"sources":["D:/תכנות/למידה מרחוק/node.js/chat-react/src/components/login.js"],"names":["React","useState","withRouter","connect","setCustomerName","setCustomerMail","setCustomerRoom","mapStateToProps","state","customer","customerReducer","mapDispatchToProps","dispatch","name","mail","room","Login","props","history","customers","setCustomers","existCustomer","setExistCustomer","myHeaders","Headers","append","login","customerDetails","customerName","customerMail","customerRoom","requestOptions1","method","headers","fetch","then","response","json","catch","error","console","log","i","length","requestOptions","body","JSON","stringify","push","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {setCustomerName,setCustomerMail,setCustomerRoom} from '../Store/actions'\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n    customer:state.customerReducer.customer\r\n    };\r\n}\r\nconst mapDispatchToProps=(dispatch)=>({\r\n    setCustomerName: (name) => dispatch(setCustomerName(name)),\r\n    setCustomerMail: (mail) => dispatch(setCustomerMail(mail)),\r\n    setCustomerRoom: (room) => dispatch(setCustomerRoom(room)),\r\n    // setConversations: (name) => dispatch(setCustomerName(name))\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(function Login(props) {\r\n\r\n    const { customer,setCustomerName,setCustomerMail,setCustomerRoom,history } = props\r\n    // const [customerName, setCustomerName] = useState('');\r\n    // const [customerMail, setCustomerMail] = useState('');\r\n    const [customers, setCustomers] = useState([]);\r\n    const [existCustomer, setExistCustomer] = useState(false);\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    function login() {\r\n        debugger;\r\n        const customerDetails = {\r\n            \"customerName\": customer.customerName,\r\n            \"customerMail\": customer.customerMail,\r\n            \"customerRoom\": customer.customerRoom\r\n        }\r\n\r\n        var requestOptions1 = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            // body: JSON.stringify(customerDetails),\r\n        };\r\n\r\n        fetch(\"http://localhost:3400/getAllCustomers\", requestOptions1)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                debugger;\r\n                setCustomers(response);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        for (let i = 0; i < customers.length.length; i++) {\r\n            if (customers[i].customerMail == customer.customerMail)\r\n                setExistCustomer(true);\r\n        }\r\n//map\r\ncustomers\r\n        if (!existCustomer) {\r\n\r\n\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: JSON.stringify(customerDetails),\r\n            };\r\n\r\n            fetch(\"http://localhost:3400/createCustomer\", requestOptions)\r\n                .then(response => response.json())\r\n                .catch(error => console.log('error', error));\r\n\r\n            if (customer.customerName === 'Admin') {\r\n                history.push('/Admin')\r\n            }\r\n            else {\r\n                history.push('/Customer')\r\n\r\n            }\r\n        }\r\n        else {\r\n            // alert('this customer is already exist!')\r\n            history.push('/Customer')\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div id=\"loader4\">\r\n                            <span className=\"loader loader-1\"></span>\r\n                            <span className=\"loader loader-2\"></span>\r\n                            <span className=\"loader loader-3\"></span>\r\n                            <span className=\"loader loader-4\"></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br /><br />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <form>\r\n                        <h1>Login</h1>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"name\" onChange={(e) => setCustomerName(e.target.value)} />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Mail</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setCustomerMail(e.target.value)} />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label  className=\"form-label\">Room Number</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setCustomerRoom(e.target.value)} />\r\n                        </div>\r\n\r\n                    </form>\r\n                    <button className=\"btn btn-primary\" onClick={login}>Login</button>\r\n\r\n                </div>\r\n\r\n            </div >\r\n\r\n        </div >\r\n\r\n\r\n    )\r\n}))\r\n\r\n    //     return(\r\n//         <div>\r\n// <h1 >Welcome To Login</h1>\r\n//         </div>\r\n//     );\r\n// }"]},"metadata":{},"sourceType":"module"}