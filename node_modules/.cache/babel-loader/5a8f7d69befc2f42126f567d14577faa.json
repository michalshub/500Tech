{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\\\u05DC\\u05DE\\u05D9\\u05D3\\u05D4 \\u05DE\\u05E8\\u05D7\\u05D5\\u05E7\\\\node.js\\\\chatApp\\\\chat-react\\\\src\\\\components\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setCustomerName, setCustomerMail, setCustomerRoom } from '../Store/actions';\nimport axios from 'axios';\nimport { Socket } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    customer: state.customerReducer.customer\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCustomerName: name => dispatch(setCustomerName(name)),\n  setCustomerMail: mail => dispatch(setCustomerMail(mail)),\n  setCustomerRoom: room => dispatch(setCustomerRoom(room)) // setConversations: (name) => dispatch(setCustomerName(name))\n\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(_s(function Login(props) {\n  _s();\n\n  const {\n    customer,\n    setCustomerName,\n    setCustomerMail,\n    setCustomerRoom,\n    history\n  } = props; // const [customerName, setCustomerName] = useState('');\n  // const [customerMail, setCustomerMail] = useState('');\n  // const [customers, setCustomers] = useState([]);\n\n  const [existCustomer, setExistCustomer] = useState(false);\n  const [loginCustomer, setLoginCustomer] = useState(false); // const [loginBtn, setLoginBtn] = useState(false);\n\n  let lResponse = false;\n  let eResponse = false; // let loginBtn=false;\n\n  let loginCustomerTemp = false;\n  let existCustomerTemp = false;\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const customerDetails = {\n    \"customerName\": customer.customerName,\n    \"customerMail\": customer.customerMail,\n    \"customerRoom\": customer.customerRoom\n  };\n  useEffect(() => {\n    setCustomerName('');\n    setCustomerMail('');\n    setCustomerRoom('');\n  }, []);\n\n  function login() {\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: JSON.stringify(customerDetails)\n    };\n    fetch(\"http://localhost:3400/isLoginCustomer\", requestOptions).then(response => response.json()).then(response => {\n      lResponse = response;\n\n      if (lResponse.result === true) {\n        loginCustomerTemp = true;\n        setLoginCustomer(true);\n      }\n\n      if (loginCustomerTemp) {\n        if (customer.customerName === 'Admin') {\n          history.push('/Admin');\n        } else history.push('/Customer');\n      }\n    }).catch(error => console.log('error', error));\n    var requestOptions3 = {\n      method: 'POST',\n      headers: myHeaders,\n      body: JSON.stringify(customerDetails)\n    };\n    fetch(\"http://localhost:3400/isExistCustomer\", requestOptions3).then(response => {\n      return response.json();\n    }).then(response => {\n      eResponse = response;\n      console.log(response);\n      console.log(response);\n\n      if (eResponse.result === true) {\n        existCustomerTemp = true;\n        setExistCustomer(true);\n      }\n\n      if (!existCustomerTemp && customer.customerMail !== '' && customer.customerName !== '' && customer.customerRoom !== '') {\n        ;\n        var requestOptions2 = {\n          method: 'POST',\n          headers: myHeaders,\n          body: JSON.stringify(customerDetails)\n        };\n        fetch(\"http://localhost:3400/createCustomer\", requestOptions2).then(response => response.json()).then(() => {\n          history.push('/Customer');\n        }).catch(error => console.log('error', error));\n      } else {\n        if (!loginCustomerTemp) alert('these customer details are not allowd!');\n      }\n    }).catch(error => console.log('error', error));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"loader4\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader loader-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader loader-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader loader-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader loader-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: [\"hi \", customer === null || customer === void 0 ? void 0 : customer.customerName, \",\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 9\n            }, this), \"Welcome To Live Chat \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this), \"                        \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"form-label\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"name\",\n              onChange: e => setCustomerName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputPassword1\",\n              className: \"form-label\",\n              children: \"Mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputPassword1\",\n              onChange: e => setCustomerMail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Room Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputPassword1\",\n              onChange: e => setCustomerRoom(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          style: {\n            backgroundColor: \"#0E6C7D\"\n          },\n          onClick: login,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}, \"EZi+dz5gxGw3LC3Ga23SmCouWUQ=\")));","map":{"version":3,"sources":["D:/תכנות/למידה מרחוק/node.js/chatApp/chat-react/src/components/login.js"],"names":["React","useState","useEffect","withRouter","connect","setCustomerName","setCustomerMail","setCustomerRoom","axios","Socket","mapStateToProps","state","customer","customerReducer","mapDispatchToProps","dispatch","name","mail","room","Login","props","history","existCustomer","setExistCustomer","loginCustomer","setLoginCustomer","lResponse","eResponse","loginCustomerTemp","existCustomerTemp","myHeaders","Headers","append","customerDetails","customerName","customerMail","customerRoom","login","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","result","push","catch","error","console","log","requestOptions3","requestOptions2","alert","textAlign","e","target","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { setCustomerName, setCustomerMail, setCustomerRoom } from '../Store/actions'\r\nimport axios from 'axios';\r\nimport { Socket } from \"socket.io-client\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        customer: state.customerReducer.customer\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCustomerName: (name) => dispatch(setCustomerName(name)),\r\n    setCustomerMail: (mail) => dispatch(setCustomerMail(mail)),\r\n    setCustomerRoom: (room) => dispatch(setCustomerRoom(room)),\r\n    // setConversations: (name) => dispatch(setCustomerName(name))\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(function Login(props) {\r\n\r\n    const { customer, setCustomerName, setCustomerMail, setCustomerRoom, history } = props\r\n    // const [customerName, setCustomerName] = useState('');\r\n    // const [customerMail, setCustomerMail] = useState('');\r\n    // const [customers, setCustomers] = useState([]);\r\n    const [existCustomer, setExistCustomer] = useState(false);\r\n    const [loginCustomer, setLoginCustomer] = useState(false);\r\n    // const [loginBtn, setLoginBtn] = useState(false);\r\n\r\n    let lResponse = false;\r\n    let eResponse = false;\r\n\r\n    // let loginBtn=false;\r\n    let loginCustomerTemp = false;\r\n    let existCustomerTemp = false;\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    const customerDetails = {\r\n        \"customerName\": customer.customerName,\r\n        \"customerMail\": customer.customerMail,\r\n        \"customerRoom\": customer.customerRoom\r\n    }\r\n    useEffect(() => {\r\n        setCustomerName('');\r\n        setCustomerMail('');\r\n        setCustomerRoom('');\r\n    }, [])\r\n\r\n    function login() {\r\n         \r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(customerDetails),\r\n        };\r\n\r\n        fetch(\"http://localhost:3400/isLoginCustomer\", requestOptions)\r\n            .then((response) =>\r\n                response.json()\r\n            )\r\n            .then((response) => {\r\n                lResponse = response;\r\n                if (lResponse.result === true) {\r\n                    loginCustomerTemp = true;\r\n                    setLoginCustomer(true);\r\n                }\r\n\r\n                if (loginCustomerTemp) {\r\n                    \r\n                    if (customer.customerName === 'Admin') {\r\n                        history.push('/Admin')\r\n                    }\r\n                    else\r\n                        history.push('/Customer');\r\n\r\n                }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n\r\n        var requestOptions3 = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(customerDetails),\r\n        };\r\n\r\n        fetch(\"http://localhost:3400/isExistCustomer\", requestOptions3)\r\n            .then((response) => {\r\n              return  response.json();\r\n\r\n\r\n            })\r\n            .then((response) => {\r\n                eResponse = response;\r\n\r\n                console.log(response);\r\n                console.log(response);\r\n                if (eResponse.result === true) {\r\n                    existCustomerTemp = true;\r\n                    setExistCustomer(true);\r\n                }\r\n\r\n\r\n                if ((!existCustomerTemp) && (customer.customerMail !== '') && (customer.customerName !== '') && (customer.customerRoom !== '')) {\r\n                     ;\r\n\r\n\r\n                    var requestOptions2 = {\r\n                        method: 'POST',\r\n                        headers: myHeaders,\r\n                        body: JSON.stringify(customerDetails),\r\n                    };\r\n\r\n                    fetch(\"http://localhost:3400/createCustomer\", requestOptions2)\r\n                        .then(response => response.json())\r\n                        .then(() => {\r\n                            history.push('/Customer');\r\n                        })\r\n                        .catch(error => console.log('error', error));\r\n\r\n                }\r\n                else {\r\n                    if(!loginCustomerTemp)\r\n                    alert('these customer details are not allowd!')\r\n                }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div id=\"loader4\">\r\n                            <span className=\"loader loader-1\"></span>\r\n                            <span className=\"loader loader-2\"></span>\r\n                            <span className=\"loader loader-3\"></span>\r\n                            <span className=\"loader loader-4\"></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br /><br />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <form>\r\n                    <h1 style={{textAlign:\"center\"}}>hi {customer?.customerName},\r\n        <br/>    \r\n         Welcome To Live Chat </h1>                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"name\" onChange={(e) => setCustomerName(e.target.value)} />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Mail</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setCustomerMail(e.target.value)} />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Room Number</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"exampleInputPassword1\" onChange={(e) => setCustomerRoom(e.target.value)} />\r\n                        </div>\r\n\r\n                    </form>\r\n                    <button className=\"btn btn-primary\" style={{ backgroundColor: \"#0E6C7D\" }} onClick={login}>Login</button>\r\n\r\n                </div>\r\n\r\n            </div >\r\n\r\n        </div >\r\n\r\n\r\n    )\r\n}))\r\n"]},"metadata":{},"sourceType":"module"}