{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\\\u05DC\\u05DE\\u05D9\\u05D3\\u05D4 \\u05DE\\u05E8\\u05D7\\u05D5\\u05E7\\\\node.js\\\\chatApp\\\\chat-react\\\\src\\\\components\\\\support.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    customer: state.customerReducer.customer\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({// setConfirm: (con) => dispatch(setConfirmPayment(con)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(_s(function Customer(props) {\n  var _allCustomers$custome, _allConversations$con;\n\n  _s();\n\n  const {\n    customer,\n    history\n  } = props;\n  const [openConversation, setOpenConversation] = useState(false);\n  const [allConversations, setAllConversations] = useState([]);\n  const [allCustomers, setAallCustomers] = useState([]);\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders\n  };\n  useEffect(() => {\n    var requestOptions1 = {\n      method: 'POST',\n      headers: myHeaders\n    };\n    fetch(\"http://localhost:3400/getAllCustomers\", requestOptions1).then(response => response.json()).then(response => {\n      debugger;\n      setAallCustomers(response);\n      console.log(allCustomers);\n    }).catch(error => console.log('error', error)); // fetch(\"http://localhost:3400/getAllConversations\", requestOptions)\n    //     .then(response => response.json())\n    //     .then(response => {\n    //         debugger;\n    //         setAllConversations(response);\n    //         console.log(allConversations);\n    //     })\n    //     .catch(error => console.log('error', error));\n  }, []);\n\n  function fetchConversation() {\n    fetch(\"http://localhost:3400/getAllConversations\", requestOptions).then(response => response.json()).then(response => {\n      debugger;\n      setAllConversations(response);\n      setOpenConversation(true);\n      console.log(allConversations);\n    }).catch(error => console.log('error', error));\n  }\n\n  function showMessages(conId) {\n    history.push(`/messages/${conId}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome To Support\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"rounded-top\",\n      style: {\n        marginLeft: \"70%\",\n        width: \"25%\",\n        height: \"450px\",\n        border: \"black 2px solid\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"black\",\n          height: \"40px\",\n          color: \"white\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            display: \"inline-block\"\n          },\n          className: \"mx-4 mb-4\",\n          children: \"Conversations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), openConversation === false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: ((_allCustomers$custome = allCustomers.customers) === null || _allCustomers$custome === void 0 ? void 0 : _allCustomers$custome.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: allCustomers.customers.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => fetchConversation(item.Cus),\n              children: item.customerName !== 'Admin' ? /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: item.customerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 61\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 53\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 49\n          }, this))\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"search for customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 37\n          }, this)\n        }, void 0, false)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), openConversation === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: ((_allConversations$con = allConversations.conversation) === null || _allConversations$con === void 0 ? void 0 : _allConversations$con.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this), allConversations.conversation.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.customerName !== 'Admin' ? /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: item.customerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 53\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 45\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 41\n          }, this))]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"There is no conversations yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this)\n        }, void 0, false)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}, \"lCAWWjRfZc2Mr0/zINC/GlVLsbM=\")));","map":{"version":3,"sources":["D:/תכנות/למידה מרחוק/node.js/chatApp/chat-react/src/components/support.js"],"names":["React","useState","useEffect","withRouter","Link","connect","mapStateToProps","state","customer","customerReducer","mapDispatchToProps","dispatch","Customer","props","history","openConversation","setOpenConversation","allConversations","setAllConversations","allCustomers","setAallCustomers","myHeaders","Headers","append","requestOptions","method","headers","requestOptions1","fetch","then","response","json","console","log","catch","error","fetchConversation","showMessages","conId","push","marginLeft","width","height","border","backgroundColor","color","display","customers","length","map","item","index","Cus","customerName","conversation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    withRouter,\r\n    Link\r\n} from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        customer: state.customerReducer.customer\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    // setConfirm: (con) => dispatch(setConfirmPayment(con)),\r\n\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(function Customer(props) {\r\n\r\n    const { customer, history } = props\r\n\r\n    const [openConversation, setOpenConversation] = useState(false);\r\n    const [allConversations, setAllConversations] = useState([]);\r\n    const [allCustomers, setAallCustomers] = useState([]);\r\n\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        var requestOptions1 = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n        };\r\n        fetch(\"http://localhost:3400/getAllCustomers\", requestOptions1)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                debugger;\r\n                setAallCustomers(response);\r\n                console.log(allCustomers);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        // fetch(\"http://localhost:3400/getAllConversations\", requestOptions)\r\n        //     .then(response => response.json())\r\n        //     .then(response => {\r\n        //         debugger;\r\n        //         setAllConversations(response);\r\n        //         console.log(allConversations);\r\n        //     })\r\n        //     .catch(error => console.log('error', error));\r\n\r\n    }, [])\r\n\r\n    function fetchConversation() {\r\n        fetch(\"http://localhost:3400/getAllConversations\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                debugger;\r\n                setAllConversations(response);\r\n                setOpenConversation(true);\r\n                console.log(allConversations);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n    }\r\n\r\n    function showMessages(conId) {\r\n        history.push(`/messages/${conId}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 >Welcome To Support</h1>\r\n            {/* {\r\n    openChat? */}\r\n\r\n            <form className=\"rounded-top\" style={{ marginLeft: \"70%\", width: \"25%\", height: \"450px\", border: \"black 2px solid\" }}>\r\n\r\n                <div style={{ backgroundColor: \"black\", height: \"40px\", color: \"white\" }}>\r\n                    <p style={{ display: \"inline-block\" }} className=\"mx-4 mb-4\">Conversations</p>\r\n                    {/* <svg  style={{ cursor: \"pointer\", marginLeft: \"45%\", display: \"inline-block\" }} xmlns=\"http://www.w3.org/2000/svg\" height=\"48\" width=\"48\" viewBox=\"0 0 48 48\">\r\n                                <g>\r\n                                    <path id=\"path1\" transform=\"rotate(0,24,24) translate(11,12.625) scale(0.8125,0.8125)  \" fill=\"#007BFF\" d=\"M15,4L17,4 17,9 22,9 22,11 17,11 17,16 15,16 15,11 10,11 10,9 15,9z M5,2C3.3459997,2,2,3.346,2,5L2,15C2,16.654,3.3459997,18,5,18L7,18C7.552,18,8,18.447,8,19L8,24.586 14.293,18.293C14.48,18.105,14.735,18,15,18L27,18C28.654,18,30,16.654,30,15L30,5C30,3.346,28.654,2,27,2z M5,0L27,0C29.757,0,32,2.243,32,5L32,15C32,17.757,29.757,20,27,20L15.414,20 7.7069998,27.707001C7.5159998,27.898001 7.2600002,28 7,28 6.8710003,28 6.7410002,27.976 6.6169996,27.924 6.2440004,27.77 6,27.403999 6,27L6,20 5,20C2.243,20,0,17.757,0,15L0,5C0,2.243,2.243,0,5,0z\" />\r\n                                </g>\r\n                            </svg> */}\r\n                </div>\r\n\r\n                {\r\n                    openConversation === false ?\r\n                        <>\r\n                            {\r\n                                allCustomers.customers?.length > 0 ?\r\n                                    <>\r\n\r\n                                        {\r\n                                            allCustomers.customers.map((item, index) => (\r\n                                                <div key={index}>\r\n                                                    {/* <div onClick={()=>showMessages(item._id)}>\r\n                                        <h6>{item.customerName}</h6>\r\n                                    </div> */}\r\n                                                    <div onClick={() => fetchConversation(item.Cus)}>\r\n                                                        {item.customerName !== 'Admin' ?\r\n                                                            <h6>{item.customerName}</h6>\r\n                                                            :\r\n                                                            <>\r\n                                                            </>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                    <p>search for customers</p>\r\n                                    </>\r\n                            }\r\n                        </>\r\n                        :\r\n                        <>\r\n                        </>\r\n                }\r\n\r\n                {openConversation === true ?\r\n                    <>\r\n                        {allConversations.conversation?.length > 0 ?\r\n                            <>\r\n                                <p>m</p>\r\n                                {/* <p>{allConversations.conversation.customerName}</p> */}\r\n\r\n                                {\r\n                                    allConversations.conversation.map((item, index) => (\r\n                                        <div key={index}>\r\n                                            {/* <div onClick={()=>showMessages(item._id)}>\r\n                                        <h6>{item.customerName}</h6>\r\n                                    </div> */}\r\n                                            <div>\r\n                                                {item.customerName !== 'Admin' ?\r\n                                                    <h6>{item.customerName}</h6>\r\n                                                    :\r\n                                                    <>\r\n                                                    </>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <p>There is no conversations yet.</p>\r\n                            </>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <>\r\n                    </>\r\n                }\r\n\r\n            </form>\r\n\r\n            {/* :\r\n<>\r\n<div style={{ paddingLeft:\"93%\", paddingTop:\"25%\"}} onClick={()=>{setOpenChat(true)}}>\r\n<Link to=\"/messages\">\r\n\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" className=\"bi bi-chat-square-quote\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1h-2.5a2 2 0 0 0-1.6.8L8 14.333 6.1 11.8a2 2 0 0 0-1.6-.8H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2.5a1 1 0 0 1 .8.4l1.9 2.533a1 1 0 0 0 1.6 0l1.9-2.533a1 1 0 0 1 .8-.4H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\r\n  <path d=\"M7.066 4.76A1.665 1.665 0 0 0 4 5.668a1.667 1.667 0 0 0 2.561 1.406c-.131.389-.375.804-.777 1.22a.417.417 0 1 0 .6.58c1.486-1.54 1.293-3.214.682-4.112zm4 0A1.665 1.665 0 0 0 8 5.668a1.667 1.667 0 0 0 2.561 1.406c-.131.389-.375.804-.777 1.22a.417.417 0 1 0 .6.58c1.486-1.54 1.293-3.214.682-4.112z\"/>\r\n</svg>\r\n</Link>\r\n</div>\r\n</>\r\n} */}\r\n        </div>\r\n    );\r\n}))"]},"metadata":{},"sourceType":"module"}