{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\\\u05DC\\u05DE\\u05D9\\u05D3\\u05D4 \\u05DE\\u05E8\\u05D7\\u05D5\\u05E7\\\\node.js\\\\chatApp\\\\chat-react\\\\src\\\\components\\\\messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'; // import { setCustomerName, setCustomerMail, setCustomerRoom } from '../Store/actions'\n\nimport socketIoClient from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    customer: state.customerReducer.customer\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({});\n\nconst ENDPOINT = \"http://localhost:3400\";\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(_s(function Messages(props) {\n  var _allMessages$messages;\n\n  _s();\n\n  const {\n    customer,\n    history\n  } = props;\n  const [allMessages, setAllMessages] = useState([]);\n  const [messageTxt, setMessageTxt] = useState('');\n  const [messageDt, setMessageDt] = useState('');\n  debugger;\n  const conId = history.location.pathname.split('/')[2];\n  const socket = socketIoClient(ENDPOINT);\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders\n  };\n  useEffect(() => {\n    console.log('useEffect');\n    fetch(`http://localhost:3400/getMessagesByConversationId/${conId}`, requestOptions).then(response => response.json()).then(response => {\n      debugger;\n      console.log(allMessages);\n      setAllMessages(response);\n      console.log(allMessages);\n    }).catch(error => console.log('error', error));\n    socket.on(\"connection\", () => {\n      console.log(socket);\n      console.log(\"connect\");\n    });\n    socket.on(\"message\", message => {\n      console.log(\"PPPPPPPPPPPPPPPPPPP\" + message);\n      let messagesTemp = [...allMessages];\n      messagesTemp.push(message);\n      setAllMessages(messagesTemp); // console.log(\"connect\");\n    });\n  }, []);\n\n  function backToConversations() {\n    history.push('/Customer');\n  }\n\n  function sendMessage() {\n    debugger;\n    const message = {\n      messageText: messageTxt,\n      messageDate: messageDt,\n      messageWriter: customer.customerName,\n      conId: conId,\n      customerRoom: customer.customerRoom\n    };\n    socket.emit('sendMessage', message);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome To Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"current customer: mail: \", customer.customerMail, \", name: \", customer.customerName, \", room: \", customer.customerRoom, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"rounded-top\",\n      style: {\n        backgroundColor: \"white\",\n        boxShadow: \"5px 5px 2px grey\",\n        marginLeft: \"70%\",\n        width: \"300px\",\n        height: \"450px\",\n        border: \"black 2px solid\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"black\",\n          height: \"40px\",\n          color: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mx-4 mb-4\",\n          style: {\n            display: \"inline-block\"\n          },\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          onClick: backToConversations,\n          style: {\n            cursor: \"pointer\",\n            display: \"inline-block\",\n            marginLeft: \"45%\"\n          },\n          xmlns: \"http://www.w3.org/2000/svg\",\n          height: \"48\",\n          width: \"48\",\n          viewBox: \"0 0 48 48\",\n          children: /*#__PURE__*/_jsxDEV(\"g\", {\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              id: \"path1\",\n              transform: \"rotate(0,24,24) translate(11,11.9749998450279) scale(0.8125,0.8125)  \",\n              fill: \"#007BFF\",\n              d: \"M25.399994,10.400033L32,16.60005 25.399994,23.000019 25.399994,18.599991 14,18.599991 14,14.800061 25.399994,14.800061z M0,0L22.200012,0 22.200012,11.800058 18.800018,11.800058 18.800018,3.2000146 3.2000122,3.2000146 3.2000122,26.400047 18.800018,26.400047 18.800018,21.400042 22.200012,21.400042 22.200012,29.6 0,29.6z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), ((_allMessages$messages = allMessages.messages) === null || _allMessages$messages === void 0 ? void 0 : _allMessages$messages.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: allMessages.messages.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflow: \"auto !important\" // top: \"0\",\n            // bottom: \"0\",\n            // right: \"0\",\n            // left: \"0\",\n            // position: \"absolute\",\n            // overflowY: \"auto\",\n            // overflowX: \"hidden\"\n\n          },\n          className: \"scrollspy-example\",\n          \"data-bs-spy\": \"scroll\",\n          children: item.messageWriter !== 'Admin' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"10%\"\n            },\n            children: [customer.customerName !== 'Admin' ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"me:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: customer.customerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"rounded-right\",\n              style: {\n                backgroundColor: \"lightblue\"\n              },\n              children: [\" \", item.messageText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.messageDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginRight: \"10%\"\n            },\n            children: [customer.customerName !== 'Admin' ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"support:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"me:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                backgroundColor: \"lightgray\"\n              },\n              className: \"rounded-right\",\n              children: item.messageText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.messageDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 41\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 33\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There is no messages yet, you can be the first!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"inputDiv\",\n        className: \"mx-1 \",\n        style: {\n          marginTop: \"99%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          id: \"messTxt\",\n          className: \"form-control\",\n          placeholder: \"send a message\",\n          onChange: e => {\n            debugger; //  let txt = document.getElementById('messTxt');\n\n            setMessageTxt(e.target.value);\n            let today = new Date();\n            let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n            setMessageDt(date);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: sendMessage,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}, \"+Ysudj4n/VtlowixmhsbDdKyIsI=\")));","map":{"version":3,"sources":["D:/תכנות/למידה מרחוק/node.js/chatApp/chat-react/src/components/messages.js"],"names":["React","useState","useEffect","connect","withRouter","socketIoClient","mapStateToProps","state","customer","customerReducer","mapDispatchToProps","dispatch","ENDPOINT","Messages","props","history","allMessages","setAllMessages","messageTxt","setMessageTxt","messageDt","setMessageDt","conId","location","pathname","split","socket","myHeaders","Headers","append","requestOptions","method","headers","console","log","fetch","then","response","json","catch","error","on","message","messagesTemp","push","backToConversations","sendMessage","messageText","messageDate","messageWriter","customerName","customerRoom","emit","customerMail","backgroundColor","boxShadow","marginLeft","width","height","border","color","display","cursor","messages","length","map","item","index","overflow","marginRight","marginTop","e","target","value","today","Date","date","getFullYear","getMonth","getDate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom';\r\n// import { setCustomerName, setCustomerMail, setCustomerRoom } from '../Store/actions'\r\nimport socketIoClient from 'socket.io-client';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        customer: state.customerReducer.customer\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n})\r\n\r\n\r\nconst ENDPOINT = \"http://localhost:3400\";\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(function Messages(props) {\r\n    const { customer, history } = props\r\n\r\n    const [allMessages, setAllMessages] = useState([]);\r\n    const [messageTxt, setMessageTxt] = useState('');\r\n    const [messageDt, setMessageDt] = useState('');\r\n    debugger;\r\n\r\n    const conId = history.location.pathname.split('/')[2];\r\n    const socket = socketIoClient(ENDPOINT);\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('useEffect');\r\n        fetch(`http://localhost:3400/getMessagesByConversationId/${conId}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                debugger;\r\n                console.log(allMessages);\r\n                setAllMessages(response);\r\n                console.log(allMessages);\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n        socket.on(\"connection\", () => {\r\n            console.log(socket);\r\n            console.log(\"connect\");\r\n        })\r\n\r\n        socket.on(\"message\", (message) => {\r\n            console.log(\"PPPPPPPPPPPPPPPPPPP\" + message);\r\n            let messagesTemp = [...allMessages];\r\n            messagesTemp.push(message);\r\n            setAllMessages(messagesTemp);\r\n            // console.log(\"connect\");\r\n        })\r\n\r\n    }, [])\r\n\r\n    function backToConversations() {\r\n        history.push('/Customer')\r\n    }\r\n\r\n    function sendMessage() {\r\n\r\n        debugger;\r\n        const message = {\r\n            messageText: messageTxt,\r\n            messageDate: messageDt,\r\n            messageWriter: customer.customerName,\r\n            conId: conId,\r\n            customerRoom: customer.customerRoom\r\n        }\r\n        socket.emit('sendMessage', message);\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <h1 >Welcome To Messages</h1>\r\n            <p>current customer: mail: {customer.customerMail}, name: {customer.customerName}, room: {customer.customerRoom} </p>\r\n            <form className=\"rounded-top\" style={{ backgroundColor: \"white\", boxShadow: \"5px 5px 2px grey\", marginLeft: \"70%\", width: \"300px\", height: \"450px\", border: \"black 2px solid\" }}>\r\n                <div style={{ backgroundColor: \"black\", height: \"40px\", color: \"white\" }}>\r\n                    <p className=\"mx-4 mb-4\" style={{ display: \"inline-block\" }}>Messages</p>\r\n                    <svg onClick={backToConversations} style={{ cursor: \"pointer\", display: \"inline-block\", marginLeft: \"45%\" }} xmlns=\"http://www.w3.org/2000/svg\" height=\"48\" width=\"48\" viewBox=\"0 0 48 48\">\r\n                        <g>\r\n                            <path id=\"path1\" transform=\"rotate(0,24,24) translate(11,11.9749998450279) scale(0.8125,0.8125)  \" fill=\"#007BFF\" d=\"M25.399994,10.400033L32,16.60005 25.399994,23.000019 25.399994,18.599991 14,18.599991 14,14.800061 25.399994,14.800061z M0,0L22.200012,0 22.200012,11.800058 18.800018,11.800058 18.800018,3.2000146 3.2000122,3.2000146 3.2000122,26.400047 18.800018,26.400047 18.800018,21.400042 22.200012,21.400042 22.200012,29.6 0,29.6z\" />\r\n                        </g>\r\n                    </svg>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {allMessages.messages?.length > 0 ?\r\n                    <>\r\n                        {\r\n\r\n\r\n                            allMessages.messages.map((item, index) => (\r\n                                <div key={index} style={{\r\n                                    overflow: \"auto !important\",\r\n                                    \r\n                                    \r\n                                    // top: \"0\",\r\n                                    // bottom: \"0\",\r\n                                    // right: \"0\",\r\n                                    // left: \"0\",\r\n                                    // position: \"absolute\",\r\n                                    // overflowY: \"auto\",\r\n                                    // overflowX: \"hidden\"\r\n                                }} \r\n                                className=\"scrollspy-example\" data-bs-spy=\"scroll\">\r\n                                    {item.messageWriter !== 'Admin' ?\r\n                                        <div style={{ marginLeft: \"10%\" }}  >\r\n                                            {customer.customerName !== 'Admin' ?\r\n                                                <p>me:</p>\r\n                                                :\r\n                                                <p>{customer.customerName}</p>\r\n\r\n                                            }\r\n                                            <p className=\"rounded-right\" style={{ backgroundColor: \"lightblue\" }}> {item.messageText}</p>\r\n                                            <p>{item.messageDate}</p>\r\n                                        </div>\r\n                                        :\r\n                                        <div style={{ marginRight: \"10%\" }}>\r\n                                            {customer.customerName !== 'Admin' ?\r\n                                                <p>support:</p>\r\n                                                :\r\n                                                <p>me:</p>\r\n                                            }\r\n                                            <p style={{ backgroundColor: \"lightgray\" }} className=\"rounded-right\">{item.messageText}</p>\r\n                                            <p>{item.messageDate}</p>\r\n                                        </div>\r\n                                    }\r\n\r\n\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <p>There is no messages yet, you can be the first!!!</p>\r\n                    </>\r\n                }\r\n\r\n                <div id=\"inputDiv\" className=\"mx-1 \" style={{ marginTop: \"99%\" }}>\r\n                    {/* {\r\n                       \r\n                        document.addEventListener('keydown', function (event) {\r\n                            if (event.code === 'Enter') {\r\n                                debugger;\r\n                                // alert(\"you pressed enter\");\r\n                                sendMessage();\r\n                            }\r\n                        })\r\n                    } */}\r\n                    <textarea type=\"text\" id=\"messTxt\" className=\"form-control\" placeholder=\"send a message\" onChange={(e) => {\r\n                        debugger;\r\n                        //  let txt = document.getElementById('messTxt');\r\n                        setMessageTxt(e.target.value)\r\n                        let today = new Date();\r\n                        let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n                        setMessageDt(date)\r\n                    }} />\r\n                    <button className=\"btn btn-primary\" onClick={sendMessage}>\r\n                        send\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n        </div >\r\n    );\r\n}))"]},"metadata":{},"sourceType":"module"}